<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
    <comment>キャンセルの文言です。</comment>
  </data>
  <data name="ConditionalReceiveNotifyDescription" xml:space="preserve">
    <value>受信したジョブ実行結果を表示する条件を設定します。
チェックOFFの場合、ジョブ結果が失敗の場合のみ通知されます。
ここで設定した条件は、個別の設定よりも優先されます。</value>
    <comment>実行結果通知を受信する条件項目の説明です。</comment>
  </data>
  <data name="ConditionalReceiveNotifyHeader" xml:space="preserve">
    <value>通知受信条件</value>
    <comment>実行結果通知を受信する条件項目のヘッダー文言です。</comment>
  </data>
  <data name="ConditionalReceiveSuccessed" xml:space="preserve">
    <value>成功した場合でも表示する。</value>
    <comment>実行結果が正常な場合でも通知を受信する設定項目の文言です。</comment>
  </data>
  <data name="DispatcherUnhandledExceptionMessage" xml:space="preserve">
    <value>予期せぬエラーをキャッチしました。</value>
    <comment>DispatcherUnhandledException イベントで補足した場合の例外メッセージです。</comment>
  </data>
  <data name="ErrorConfigurationValue" xml:space="preserve">
    <value>設定内容にエラーがあります。
設定項目を確認して適切な値を設定してください。</value>
    <comment>構成情報の設定値エラーメッセージです。</comment>
  </data>
  <data name="ExitConfirmMessage" xml:space="preserve">
    <value>アプリケーションを終了します。よろしいですか？</value>
    <comment>アプリケーション終了確認メッセージです。</comment>
  </data>
  <data name="Fade" xml:space="preserve">
    <value>フェード</value>
    <comment>フェードの文言です。</comment>
  </data>
  <data name="FailedSaveConfiguration" xml:space="preserve">
    <value>設定ファイルの保存中にエラーが発生しました。
設定ファイルをエディタなどで開いている場合はエディタを閉じてから、もう一度保存ボタンをクリックしてください。</value>
    <comment>設定ファイルの保存失敗時のエラーメッセージです。</comment>
  </data>
  <data name="FewRecievedHistoryCount" xml:space="preserve">
    <value>50</value>
    <comment>実行結果受信履歴一覧に表示する少量の数です。</comment>
  </data>
  <data name="FirstChanceExceptionMessage" xml:space="preserve">
    <value>共通の例外補足イベントハンドラで例外を補足しました。</value>
    <comment>FirstChanceException イベントで補足した場合の例外メッセージです。</comment>
  </data>
  <data name="HowToDisplayBalloonDescription" xml:space="preserve">
    <value>バルーンを表示する方法を選択します。</value>
    <comment>バルーン表示の設定項目の説明です。</comment>
  </data>
  <data name="HowToDisplayBalloonHeader" xml:space="preserve">
    <value>バルーン表示方法</value>
    <comment>バルーン表示の設定項目のヘッダー文言です。</comment>
  </data>
  <data name="InformationSaveConfiguration" xml:space="preserve">
    <value>設定内容を保存しました。</value>
    <comment>構成情報の保存成功メッセージです。</comment>
  </data>
  <data name="LongTimeNotifyBalloonTimeout" xml:space="preserve">
    <value>30 秒</value>
    <comment>通知バルーン表示タイムアウトの長い時間設定項目です。</comment>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>手動</value>
    <comment>手動の文言です。</comment>
  </data>
  <data name="ManyRecievedHistoryCount" xml:space="preserve">
    <value>200</value>
    <comment>実行結果受信履歴一覧に表示する多量の数です。</comment>
  </data>
  <data name="MiddleTimeNotifyBalloonTimeout" xml:space="preserve">
    <value>15 秒</value>
    <comment>通知バルーン表示タイムアウトの標準時間設定項目です。</comment>
  </data>
  <data name="None" xml:space="preserve">
    <value>なし</value>
    <comment>なしの文言です。</comment>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>通知</value>
    <comment>通知の文言です。</comment>
  </data>
  <data name="NotifyBalloonTimeoutDescription" xml:space="preserve">
    <value>ジョブの通知を受け取ったときに表示する通知バルーンが消えるまでの時間を設定します。</value>
    <comment>通知バルーン表示タイムアウトの設定項目の説明です。</comment>
  </data>
  <data name="NotifyBalloonTimeoutHeader" xml:space="preserve">
    <value>通知バルーン表示タイムアウト</value>
    <comment>通知バルーン表示タイムアウトの設定項目のヘッダー文言です。</comment>
  </data>
  <data name="ProperRecievedHistoryCount" xml:space="preserve">
    <value>100</value>
    <comment>実行結果受信履歴一覧に表示する適切な数です。</comment>
  </data>
  <data name="QuestionSaveConfiguration" xml:space="preserve">
    <value>現在の設定内容を保存します。よろしいですか？</value>
    <comment>構成情報の更新確認メッセージです。</comment>
  </data>
  <data name="RecievedHistoryCountDescription" xml:space="preserve">
    <value>受信履歴一覧に表示する履歴データの数を選択します。</value>
    <comment>実行結果受信履歴一覧に表示する設定項目の説明です。</comment>
  </data>
  <data name="RecievedHistoryCountHeader" xml:space="preserve">
    <value>受信履歴表示数</value>
    <comment>実行結果受信履歴一覧に表示する設定項目のヘッダー文言です。</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
    <comment>保存の文言です。</comment>
  </data>
  <data name="Scroll" xml:space="preserve">
    <value>スクロール</value>
    <comment>スクロールの文言です。</comment>
  </data>
  <data name="ShortTimeNotifyBalloonTimeout" xml:space="preserve">
    <value>5 秒</value>
    <comment>通知バルーン表示タイムアウトの短い時間設定項目です。</comment>
  </data>
  <data name="Slide" xml:space="preserve">
    <value>スライド</value>
    <comment>スライドの文言です。</comment>
  </data>
  <data name="TestConnection" xml:space="preserve">
    <value>テスト接続</value>
    <comment>テスト接続ボタンの文言です。</comment>
  </data>
  <data name="UnhandledExceptionMessage" xml:space="preserve">
    <value>予期せぬエラーをキャッチしました。</value>
    <comment>UnhandledException イベントで補足した場合の例外メッセージです。</comment>
  </data>
  <data name="UnhandledExceptionShowMessage" xml:space="preserve">
    <value>予期せぬエラーをキャッチしました。システム管理者に問い合わせてください。</value>
    <comment>補足されなかった例外をキャッチした場合にユーザーに表示するメッセージです。</comment>
  </data>
  <data name="WebSocketURIDescription" xml:space="preserve">
    <value>通知元のJenkins URIを設定してください。
URIは`ws://`から始まるプロトコルです。</value>
    <comment>WebSocket URIの設定項目の説明です。</comment>
  </data>
  <data name="WebSocketURIHeader" xml:space="preserve">
    <value>Jenkins WebSocket URI</value>
    <comment>WebSocket URIの設定項目ヘッダーの文言です。</comment>
  </data>
</root>