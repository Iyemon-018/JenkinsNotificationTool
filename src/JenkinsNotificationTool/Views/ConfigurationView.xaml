<customControls:View
    x:Class="JenkinsNotificationTool.Views.ConfigurationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:JenkinsNotification.CustomControls;assembly=JenkinsNotification.CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:JenkinsNotificationTool.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:JenkinsNotificationTool.ViewModels"
    Title="ConfigurationView"
    Width="600"
    Height="600"
    d:DataContext="{d:DesignInstance {x:Type viewModels:ConfigurationViewModel},
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">
    <customControls:View.Resources>
        <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="0,0,12,0" />
        </Style>
    </customControls:View.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl>
            <TabItem Header="通知">
                <Grid>
                    <StackPanel Margin="12" Orientation="Vertical">
                        <customControls:ItemContent Description="通知元のJenkins URIを設定してください。URIは`ws://`から始まるプロトコルです。" Header="Jenkins URI">
                            <TextBox Text="{Binding NotifyConfiguration.TargetUri, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=LostFocus}" />
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="ジョブの通知を受け取ったときに表示する通知バルーンを表示する時間を設定します。" Header="通知バルーン表示時間">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                        <Setter Property="GroupName" Value="BalloonDisplayTimeoutGroup" />
                                    </Style>
                                </StackPanel.Resources>
                                <RadioButton Content="手動" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Manual}" />
                                <RadioButton Content="5" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Seconds5}" />
                                <RadioButton Content="15" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Seconds15}" />
                                <RadioButton Content="30" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Seconds30}" />
                            </StackPanel>
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="受信したジョブ実行結果を表示する条件を設定します。チェックOFFの場合、ジョブ結果が失敗の場合のみ通知されます。ここで設定した条件は、個別の設定よりも優先されます。" Header="通知受信条件">
                            <CheckBox Content="成功した場合でも表示する。" IsChecked="{Binding NotifyConfiguration.IsNotifySuccess, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="バルーンを表示する方法を選択します。" Header="バルーン表示方法">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                        <Setter Property="GroupName" Value="BalloonTypeGroup" />
                                    </Style>
                                </StackPanel.Resources>
                                <RadioButton Content="なし" IsChecked="{Binding NotifyConfiguration.PopupAnimationType, ConverterParameter=None, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="フェード" IsChecked="{Binding NotifyConfiguration.PopupAnimationType, ConverterParameter=Fade, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="スライド" IsChecked="{Binding NotifyConfiguration.PopupAnimationType, ConverterParameter=Slide, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="スクロール" IsChecked="{Binding NotifyConfiguration.PopupAnimationType, ConverterParameter=Scroll, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="受信履歴一覧に表示する履歴データの数を選択します。" Header="受信履歴表示数">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                        <Setter Property="GroupName" Value="NotifyHistoryCountGroup" />
                                    </Style>
                                </StackPanel.Resources>
                                <RadioButton Content="50" IsChecked="{Binding NotifyHistoryCountKind, ConverterParameter=Count50, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="100" IsChecked="{Binding NotifyHistoryCountKind, ConverterParameter=Count100, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="200" IsChecked="{Binding NotifyHistoryCountKind, ConverterParameter=Count200, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </customControls:ItemContent>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</customControls:View>