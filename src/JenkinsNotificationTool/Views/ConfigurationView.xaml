<customControls:View
    x:Class="JenkinsNotificationTool.Views.ConfigurationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:JenkinsNotification.CustomControls;assembly=JenkinsNotification.CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
    xmlns:local="clr-namespace:JenkinsNotificationTool.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:JenkinsNotificationTool.ViewModels"
    x:Name="View"
    Title="ConfigurationView"
    Width="480"
    Height="660"
    MinWidth="{Binding Width, ElementName=View, Mode=OneTime}"
    MinHeight="{Binding Height, ElementName=View, Mode=OneTime}"
    d:DataContext="{d:DesignInstance {x:Type viewModels:ConfigurationViewModel},
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">
    <customControls:View.Resources>
        <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="0,0,12,0" />
        </Style>
    </customControls:View.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <dragablz:TabablzControl
            BorderThickness="0,1"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True">
            <TabItem Background="Green" Header="{Binding Notification, Mode=OneWay, Source={StaticResource Resources}}">
                <Grid>
                    <StackPanel Margin="12" Orientation="Vertical">
                        <customControls:ItemContent Description="{Binding WebSocketURIDescription, Mode=OneWay, Source={StaticResource Resources}}" Header="{Binding WebSocketURIHeader, Mode=OneWay, Source={StaticResource Resources}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0">
                                    <TextBox Text="{Binding TargetUri, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Border>
                                <Border Grid.Column="1">
                                    <Button Command="{Binding TestConnectionCommand, Mode=OneWay}" Content="{Binding TestConnection, Mode=OneWay, Source={StaticResource Resources}}" />
                                </Border>
                            </Grid>
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="{Binding NotifyBalloonTimeoutDescription, Mode=OneWay, Source={StaticResource Resources}}" Header="{Binding NotifyBalloonTimeoutHeader, Mode=OneWay, Source={StaticResource Resources}}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                        <Setter Property="GroupName" Value="BalloonDisplayTimeoutGroup" />
                                    </Style>
                                </StackPanel.Resources>
                                <RadioButton Content="{Binding Manual, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Manual}" />
                                <RadioButton Content="{Binding ShortTimeNotifyBalloonTimeout, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Seconds5}" />
                                <RadioButton Content="{Binding MiddleTimeNotifyBalloonTimeout, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Seconds15}" />
                                <RadioButton Content="{Binding LongTimeNotifyBalloonTimeout, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding BalloonDisplayTimeKind, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter=Seconds30}" />
                            </StackPanel>
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="{Binding ConditionalReceiveNotifyDescription, Mode=OneWay, Source={StaticResource Resources}}" Header="{Binding ConditionalReceiveNotifyHeader, Mode=OneWay, Source={StaticResource Resources}}">
                            <CheckBox Content="{Binding ConditionalReceiveSuccessed, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding IsNotifySuccess, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="{Binding HowToDisplayBalloonDescription, Mode=OneWay, Source={StaticResource Resources}}" Header="{Binding HowToDisplayBalloonHeader, Mode=OneWay, Source={StaticResource Resources}}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                        <Setter Property="GroupName" Value="BalloonTypeGroup" />
                                    </Style>
                                </StackPanel.Resources>
                                <RadioButton Content="{Binding None, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding PopupAnimationType, ConverterParameter=None, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="{Binding Fade, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding PopupAnimationType, ConverterParameter=Fade, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="{Binding Slide, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding PopupAnimationType, ConverterParameter=Slide, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="{Binding Scroll, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding PopupAnimationType, ConverterParameter=Scroll, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </customControls:ItemContent>
                        <customControls:ItemContent Description="{Binding RecievedHistoryCountDescription, Mode=OneWay, Source={StaticResource Resources}}" Header="{Binding RecievedHistoryCountHeader, Mode=OneWay, Source={StaticResource Resources}}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                        <Setter Property="GroupName" Value="NotifyHistoryCountGroup" />
                                    </Style>
                                </StackPanel.Resources>
                                <RadioButton Content="{Binding FewRecievedHistoryCount, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding NotifyHistoryCountKind, ConverterParameter=Count50, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="{Binding ProperRecievedHistoryCount, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding NotifyHistoryCountKind, ConverterParameter=Count100, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                                <RadioButton Content="{Binding ManyRecievedHistoryCount, Mode=OneWay, Source={StaticResource Resources}}" IsChecked="{Binding NotifyHistoryCountKind, ConverterParameter=Count200, Converter={StaticResource BooleanToEnumConverter}, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </customControls:ItemContent>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="通知条件詳細" />
        </dragablz:TabablzControl>
        <StackPanel
            Grid.Row="1"
            Margin="24,14"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                Margin="0,0,28,0"
                Command="{Binding SaveCommand, Mode=OneWay}"
                Content="{Binding Save, Mode=OneWay, Source={StaticResource Resources}}" />
            <Button Command="{Binding CancelCommand, Mode=OneWay}" Content="{Binding Cancel, Mode=OneWay, Source={StaticResource Resources}}" />
        </StackPanel>
    </Grid>
</customControls:View>